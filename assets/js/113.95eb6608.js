(window.webpackJsonp=window.webpackJsonp||[]).push([[113],{202:function(e,t,s){"use strict";s.r(t);var n=s(0),a=Object(n.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("div",{staticClass:"content"},[s("h1",{attrs:{id:"logexperiment"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#logexperiment","aria-hidden":"true"}},[e._v("#")]),e._v(" logExperiment")]),e._v(" "),s("p",[s("a",{attrs:{href:"/src/utils/logging/index.js"}},[s("code",[e._v("logExperiment")])]),e._v(" must be called for each experiment currently running. It registers which variant the session was assigned. Without this call, we’ll have no way to measure the results of the experiment.")]),e._v(" "),s("div",{staticClass:"language-jsx extra-class"},[s("pre",{pre:!0,attrs:{class:"language-jsx"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[e._v("logExperiment")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[e._v("'experiment-name'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v("'variant-name'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n")])])]),s("p",[e._v("This call is memoized on its arguments so the same registration call is not made more than once per session (it would be okay to do so, it’s just unnecessary).")])])}],!1,null,null,null);a.options.__file="logExperiment.md";t.default=a.exports}}]);